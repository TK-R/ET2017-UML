@startuml

title 走行体ソフトウェアを構成するクラス

package 走行体情報{
    class 入力信号情報{
        カラーセンサ情報
        タッチセンサ情報
        超音波センサ情報
        ジャイロセンサ情報
        センサ情報入力()
    }

    class 出力信号情報{
        右モータ出力値
        左モータ出力値
        +モータ出力値設定(右モータ, 左モータ)
        +モータ情報出力()
    }

    class 自己位置推定器{
        +走行体角度
        +走行体座標
        +走行体位置更新(左モータ角度, 右モータ角度)
        +初期化(座標,角度)
    }
}

package Bluetooth通信{
    class Bluetooth通信管理{
    } 

    abstract 電文受信状態{
        データ受信()
    }

    class ヘッダ受信状態{
        データ受信()
    }

    class PIDパラメータ受信状態{
        データ受信()
    }

    class ブロック並べコマンド受信状態{
        データ受信()
    }

    Bluetooth通信管理 "1" --> "1" 電文受信状態
    電文受信状態 <|-- ヘッダ受信状態
    電文受信状態 <|-- PIDパラメータ受信状態
    電文受信状態 <|-- ブロック並べコマンド受信状態
}

    Bluetooth通信管理 "1" -u-> "1" 出力信号情報
    Bluetooth通信管理 "1" -u-> "1" 入力信号情報


package 競技戦略{
    class 戦略管理 {
        +戦略切替(戦略)
    }

    abstract 戦略{
        +戦略実行()

    }

    class ライントレース戦略{
        -区間番号
        +戦略実行()
        -戦略切替判定()
        -モータ出力値計算()
        -PIDパラメータ取得(座標)

    }

    class PIDパラメータ{
        +Pゲイン
        +Iゲイン
        +Dゲイン
        +直進量
        +初期位置
    }

    class 縦列駐車戦略{
        +戦略実行()
        -戦略切替判定()
        -モータ出力値計算()

    }

    abstract 縦列駐車場状態{
        移動()
    }

    class 縦列駐車場前へ移動状態{
        移動()

    }

    class 縦列駐車場内へ移動状態{
        移動()
    }

    縦列駐車場状態 "1" <-d- "1" 縦列駐車戦略
    縦列駐車場状態 <|-- 縦列駐車場前へ移動状態
    縦列駐車場状態 <|-- 縦列駐車場内へ移動状態
    

    class block as "ブロック並べ戦略"{
        +戦略実行()
        -モータ出力値計算()

    }

    abstract ブロック並べ状態{
        モータ出力値計算()
    }

    class ウェイポイント移動状態{
        モータ出力値計算()
    }

    class 旋回中状態{
        モータ出力値計算()
    }

    class ライントレース状態{
        モータ出力値計算()
    }

    ブロック並べ状態 "1" <-d- "1" block 
    ブロック並べ状態 <|-- ウェイポイント移動状態
    ブロック並べ状態 <|-- 旋回中状態
    ブロック並べ状態 <|-- ライントレース状態  
}

戦略管理 "1"-->"1..*" 戦略
戦略管理 "1" <-- "1" 戦略
戦略 <|-- 縦列駐車戦略
ライントレース戦略 "1"-->"1..*" PIDパラメータ
戦略 <|-- ライントレース戦略
戦略 "1" --> "1" 自己位置推定器  
戦略 "1" --> "1" 出力信号情報
戦略 "1" --> "1" 入力信号情報
Bluetooth通信管理 "1" --> "1" 戦略

package ブロック並べ解法{
    
    class rule as "ブロック並べルール"{
        +目標座標到達()

    }

    class command as "ブロック並べコマンド"{
        +目標座標取得()
        +目標座標到達()
    }

    戦略 <|-- block
    block "1" --> "1" rule
    rule "1" ->  "0..*" command 
    command "1"-->"1..*" line: ブロック確保/運搬
    command "1"-->"2" place : 運搬元/運搬先

    class place as "ポリゴンブロック置き場"{
        No
        置き場色
        座標
        他の置き場との距離()
        走行体との距離()
    }

    class line as "ライン"{
        始点置き場No
        終点置き場No
        ウェイポイント座標
    }
}

@enduml
@startuml

title 設計クラス図

動作状態 "1"-->"1" 入力パラメータ管理
動作状態管理 "1"-->"1" 入力パラメータ管理
class 入力パラメータ管理{
    入力信号情報
    初期位置コード
    パラメータ更新()
}

class 動作状態管理{
    周期処理呼出()
}

動作状態管理 "1"-->"1" 動作状態
class 動作状態{
    入力処理()
    周期処理()
    出力処理()
}

動作状態 <|-- ライントレース状態
class ライントレース状態{
    周期処理()
}

ライントレース状態 "1"-->"1" PIDパラメータ
class PIDパラメータ{
    Pゲイン
    Iゲイン
    Dゲイン
    パラメータ更新()
}


動作状態 <|-- 縦列駐車状態
class 縦列駐車状態{
    周期処理()
}

動作状態 <|-- ブロック並べ状態
class ブロック並べ状態{
    周期処理()
}


自己位置推定器 "1"<--"1" 動作状態 
class 自己位置推定器{
    自己位置更新()
}

ブロック並べ状態 "1"-->"1" ブロック並べルール
class ブロック並べルール{
	-五角形を構成するブロック置き場のNo
	+ブロック並べコマンド生成()
	+ブロック並べコマンド終了()
}
ブロック並べルール ..> ブロック並べコマンド
ブロック並べ状態 "1"-->"0..1" ブロック並べコマンド
class ブロック並べコマンド{
    対象ブロック
}

ブロック並べコマンド "1"-->"0..*" 運搬経路
ブロック並べコマンド "1"-->"1" 置き場
class 運搬経路{
    経路種別 : ラインorウェイポイント
}
ライン "1" <-- "1" 運搬経路

class 置き場{
	+No
	+置き場色
	+座標
	+他の置き場との距離()
	+走行体との距離()
}


ブロック並べルール  "1" -->"26" ライン 
class ライン{
	+始点置き場No
	+終点置き場No
	+ウェイポイント座標
}

ブロック並べルール "1" --> "15" 置き場


@enduml
@startuml

title モニタツールを構成するクラス(抜粋)

 
package ブロック並べ攻略{
    class フィールド

    class ブロック運搬ルール導出{
        五角形を構成するポリゴンブロック置き場のNo
        ブロック運搬ルール生成(初期位置コード)
    }

    class ブロック運搬コマンド{
    }

    ブロック運搬コマンド "1"-->"2..*" ライン : ブロックを確保/運搬で移動する経路
    ブロック運搬コマンド "1"-->"2" ポリゴンブロック置き場 : 運搬元/運搬先

    class ポリゴンブロック置き場{
        No
        置き場色
        座標
        他の置き場との距離()
        走行体との距離()
    }
    
    class ブロック {
        色
    }

    ポリゴンブロック置き場 "1" --> "0..1" ブロック
    ポリゴンブロック置き場 "1" --> "0..1" ブロック

    class ブロック運搬ルール {
        
    }

    ブロック運搬ルール導出 ..> ブロック運搬ルール
    ブロック運搬ルール "1" --> "5...*" ブロック運搬コマンド

    ブロック運搬ルール導出 "1" --> フィールド
    フィールド  "1" -->"26" ライン
    フィールド "1" --> "15" ポリゴンブロック置き場
 
    class ライン{
        ウェイポイント座標
    }

    ライン "1" --> "1" ポリゴンブロック置き場

    class ダイクストラ法{
        最短経路算出()
    }

    class 走行体 {
        座標
        走行体座標更新(座標)
    }

    ブロック運搬ルール導出 "1" --> "1" 走行体
    ブロック運搬ルール導出 "1" --> "1" ダイクストラ法
}

package Bluetooth通信{
    class Bluetooth通信管理{
        ブロック運搬コマンド送信()
        PIDパラメータ送信()
    }
}

package ライントレースパラメータ {
    class PIDパラメータ {
        Pゲイン
        Iゲイン
        Dゲイン
        走行距離
    }
}

Bluetooth通信管理 "1" --> "1..*" PIDパラメータ
Bluetooth通信管理 "1"--> "1" ブロック運搬ルール

package ユーザーインターフェース{
    class メイン画面{
        初期位置コード入力()
        ブロック運搬コマンド送信()
        PIDパラメータ設定()
        PIDパラメータ送信()

    }
}


メイン画面 "1" --> "1" Bluetooth通信管理
メイン画面 "1" --> "1" ブロック運搬ルール導出


@enduml